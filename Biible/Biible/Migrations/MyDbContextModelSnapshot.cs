// <auto-generated />
using System;
using Biible;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biible.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Biible.Models.Curiosidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Curtida");

                    b.Property<DateTime>("Data_Cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("PersonagemId");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Curiosidades");
                });

            modelBuilder.Entity("Biible.Models.Genealogia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data_Cadastro");

                    b.Property<int>("IdPersonagem1");

                    b.Property<int>("IdPersonagem2");

                    b.Property<int?>("PersonagemId");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Genealogias");
                });

            modelBuilder.Entity("Biible.Models.Outro_Nome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<DateTime>("Data_Cadastro");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int?>("PersonagemId");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Outros_Nomes");
                });

            modelBuilder.Entity("Biible.Models.PassagemBiblica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capitulo");

                    b.Property<int?>("CuriosidadeId");

                    b.Property<int?>("GenealogiaId");

                    b.Property<int>("Livro");

                    b.Property<int?>("Outro_NomeId");

                    b.Property<int?>("RegiaoId");

                    b.Property<int>("Versiculo");

                    b.HasKey("Id");

                    b.HasIndex("CuriosidadeId");

                    b.HasIndex("GenealogiaId");

                    b.HasIndex("Outro_NomeId");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Passages_Biblicas");
                });

            modelBuilder.Entity("Biible.Models.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano_Fim");

                    b.Property<bool>("Ano_Fim_AcDc");

                    b.Property<bool>("Ano_Fim_Incerto");

                    b.Property<int>("Ano_Inicio");

                    b.Property<bool>("Ano_Inicio_AcDc");

                    b.Property<bool>("Ano_Inicio_Incerto");

                    b.Property<int>("Curtida");

                    b.Property<DateTime>("Data_Cadastro");

                    b.Property<string>("Etnia");

                    b.Property<byte>("Foto");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Referencia");

                    b.Property<string>("Usuario_Cadastro");

                    b.HasKey("Id");

                    b.ToTable("Personagens");
                });

            modelBuilder.Entity("Biible.Models.Referencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data_Cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("PersonagemId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Referencias");
                });

            modelBuilder.Entity("Biible.Models.Regiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data_Cadastro");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int?>("PersonagemId");

                    b.HasKey("Id");

                    b.HasIndex("PersonagemId");

                    b.ToTable("Regioes");
                });

            modelBuilder.Entity("Biible.Models.Curiosidade", b =>
                {
                    b.HasOne("Biible.Models.Personagem")
                        .WithMany("Curiosidades")
                        .HasForeignKey("PersonagemId");
                });

            modelBuilder.Entity("Biible.Models.Genealogia", b =>
                {
                    b.HasOne("Biible.Models.Personagem")
                        .WithMany("Genealogias")
                        .HasForeignKey("PersonagemId");
                });

            modelBuilder.Entity("Biible.Models.Outro_Nome", b =>
                {
                    b.HasOne("Biible.Models.Personagem")
                        .WithMany("Outros_Nomes")
                        .HasForeignKey("PersonagemId");
                });

            modelBuilder.Entity("Biible.Models.PassagemBiblica", b =>
                {
                    b.HasOne("Biible.Models.Curiosidade")
                        .WithMany("Passagens_Biblicas")
                        .HasForeignKey("CuriosidadeId");

                    b.HasOne("Biible.Models.Genealogia")
                        .WithMany("Passagens_Biblicas")
                        .HasForeignKey("GenealogiaId");

                    b.HasOne("Biible.Models.Outro_Nome")
                        .WithMany("Passagens_Biblicas")
                        .HasForeignKey("Outro_NomeId");

                    b.HasOne("Biible.Models.Regiao")
                        .WithMany("Passagens_Biblicas")
                        .HasForeignKey("RegiaoId");
                });

            modelBuilder.Entity("Biible.Models.Referencia", b =>
                {
                    b.HasOne("Biible.Models.Personagem")
                        .WithMany("Referencias")
                        .HasForeignKey("PersonagemId");
                });

            modelBuilder.Entity("Biible.Models.Regiao", b =>
                {
                    b.HasOne("Biible.Models.Personagem")
                        .WithMany("Regioes")
                        .HasForeignKey("PersonagemId");
                });
#pragma warning restore 612, 618
        }
    }
}
